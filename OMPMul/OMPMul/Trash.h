#pragma once

void measure(void(*measure_invocation)(void(*ff)()));
void clean_50();
void measure_invocation_50(const char* title, void(*f)(), void(*callback)(void(*ff)()));
void clean_100();
void measure_invocation_100(const char* title, void(*f)(), void(*callback)(void(*ff)()));
void clean_150();
void measure_invocation_150(const char* title, void(*f)(), void(*callback)(void(*ff)()));
void clean_200();
void measure_invocation_200(const char* title, void(*f)(), void(*callback)(void(*ff)()));
void clean_250();
void measure_invocation_250(const char* title, void(*f)(), void(*callback)(void(*ff)()));
void clean_300();
void measure_invocation_300(const char* title, void(*f)(), void(*callback)(void(*ff)()));
void clean_350();
void measure_invocation_350(const char* title, void(*f)(), void(*callback)(void(*ff)()));
void clean_400();
void measure_invocation_400(const char* title, void(*f)(), void(*callback)(void(*ff)()));
void clean_450();
void measure_invocation_450(const char* title, void(*f)(), void(*callback)(void(*ff)()));
void clean_500();
void measure_invocation_500(const char* title, void(*f)(), void(*callback)(void(*ff)()));
void clean_550();
void measure_invocation_550(const char* title, void(*f)(), void(*callback)(void(*ff)()));
void clean_600();
void measure_invocation_600(const char* title, void(*f)(), void(*callback)(void(*ff)()));
void clean_650();
void measure_invocation_650(const char* title, void(*f)(), void(*callback)(void(*ff)()));
void clean_700();
void measure_invocation_700(const char* title, void(*f)(), void(*callback)(void(*ff)()));
void clean_750();
void measure_invocation_750(const char* title, void(*f)(), void(*callback)(void(*ff)()));
void clean_800();
void measure_invocation_800(const char* title, void(*f)(), void(*callback)(void(*ff)()));
void clean_850();
void measure_invocation_850(const char* title, void(*f)(), void(*callback)(void(*ff)()));
void clean_900();
void measure_invocation_900(const char* title, void(*f)(), void(*callback)(void(*ff)()));
void clean_950();
void measure_invocation_950(const char* title, void(*f)(), void(*callback)(void(*ff)()));
void clean_1000();
void measure_invocation_1000(const char* title, void(*f)(), void(*callback)(void(*ff)()));
void clean_1050();
void measure_invocation_1050(const char* title, void(*f)(), void(*callback)(void(*ff)()));
void clean_1100();
void measure_invocation_1100(const char* title, void(*f)(), void(*callback)(void(*ff)()));
void clean_1150();
void measure_invocation_1150(const char* title, void(*f)(), void(*callback)(void(*ff)()));
void clean_1200();
void measure_invocation_1200(const char* title, void(*f)(), void(*callback)(void(*ff)()));
void clean_1250();
void measure_invocation_1250(const char* title, void(*f)(), void(*callback)(void(*ff)()));
void clean_1300();
void measure_invocation_1300(const char* title, void(*f)(), void(*callback)(void(*ff)()));
void clean_1350();
void measure_invocation_1350(const char* title, void(*f)(), void(*callback)(void(*ff)()));
void clean_1400();
void measure_invocation_1400(const char* title, void(*f)(), void(*callback)(void(*ff)()));
void clean_1450();
void measure_invocation_1450(const char* title, void(*f)(), void(*callback)(void(*ff)()));
void clean_1500();
void measure_invocation_1500(const char* title, void(*f)(), void(*callback)(void(*ff)()));


